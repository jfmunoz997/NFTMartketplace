{"ast":null,"code":"import { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLocalAddrs = configure(api => {\n  async function localAddrs(options = {}) {\n    const res = await api.post('swarm/addrs/local', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {\n      Strings\n    } = await res.json();\n    return (Strings || []).map(a => new Multiaddr(a));\n  }\n  return localAddrs;\n});","map":{"version":3,"names":["Multiaddr","configure","toUrlSearchParams","createLocalAddrs","api","localAddrs","options","res","post","signal","searchParams","headers","Strings","json","map","a"],"sources":["/home/juan-ubuntu/marketplace/node_modules/ipfs-http-client/esm/src/swarm/local-addrs.js"],"sourcesContent":["import { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLocalAddrs = configure(api => {\n  async function localAddrs(options = {}) {\n    const res = await api.post('swarm/addrs/local', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return (Strings || []).map(a => new Multiaddr(a));\n  }\n  return localAddrs;\n});"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AACrC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,OAAO,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,GAAG,IAAI;EAC/C,eAAeC,UAAUA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IACtC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,mBAAmB,EAAE;MAC9CC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAER,iBAAiB,CAACI,OAAO,CAAC;MACxCK,OAAO,EAAEL,OAAO,CAACK;IACnB,CAAC,CAAC;IACF,MAAM;MAACC;IAAO,CAAC,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;IAClC,OAAO,CAACD,OAAO,IAAI,EAAE,EAAEE,GAAG,CAACC,CAAC,IAAI,IAAIf,SAAS,CAACe,CAAC,CAAC,CAAC;EACnD;EACA,OAAOV,UAAU;AACnB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}