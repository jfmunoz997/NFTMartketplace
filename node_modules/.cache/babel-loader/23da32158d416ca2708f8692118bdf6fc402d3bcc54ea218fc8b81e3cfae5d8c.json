{"ast":null,"code":"import { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createResolve = configure(api => {\n  async function resolve(path, options = {}) {\n    const res = await api.post('resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {\n      Path\n    } = await res.json();\n    return Path;\n  }\n  return resolve;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","createResolve","api","resolve","path","options","res","post","signal","searchParams","arg","headers","Path","json"],"sources":["/home/juan-ubuntu/marketplace/node_modules/ipfs-http-client/esm/src/resolve.js"],"sourcesContent":["import { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createResolve = configure(api => {\n  async function resolve(path, options = {}) {\n    const res = await api.post('resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Path} = await res.json();\n    return Path;\n  }\n  return resolve;\n});"],"mappings":"AAAA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,OAAO,MAAMC,aAAa,GAAGF,SAAS,CAACG,GAAG,IAAI;EAC5C,eAAeC,OAAOA,CAACC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACzC,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,SAAS,EAAE;MACpCC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAET,iBAAiB,CAAC;QAC9BU,GAAG,EAAEN,IAAI;QACT,GAAGC;MACL,CAAC,CAAC;MACFM,OAAO,EAAEN,OAAO,CAACM;IACnB,CAAC,CAAC;IACF,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;IAC/B,OAAOD,IAAI;EACb;EACA,OAAOT,OAAO;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}