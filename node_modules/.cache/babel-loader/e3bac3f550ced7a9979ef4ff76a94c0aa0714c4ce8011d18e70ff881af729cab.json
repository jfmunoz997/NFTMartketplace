{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const decodePin = ({\n  Name: name,\n  Status: status,\n  Cid: cid\n}) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  };\n};\nexport const encodeService = service => {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\nexport const encodeCID = cid => {\n  if (CID.asCID(cid)) {\n    return cid.toString();\n  } else {\n    throw new TypeError(`CID instance expected instead of ${typeof cid}`);\n  }\n};\nexport const encodeQuery = ({\n  service,\n  cid,\n  name,\n  status,\n  all\n}) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  });\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value));\n    }\n  }\n  if (status) {\n    for (const value of status) {\n      query.append('status', value);\n    }\n  }\n  return query;\n};\nexport const encodeAddParams = ({\n  cid,\n  service,\n  background,\n  name,\n  origins\n}) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  });\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString());\n    }\n  }\n  return params;\n};","map":{"version":3,"names":["CID","toUrlSearchParams","decodePin","Name","name","Status","status","Cid","cid","parse","encodeService","service","TypeError","encodeCID","asCID","toString","encodeQuery","all","query","force","undefined","value","append","encodeAddParams","background","origins","params","arg","origin"],"sources":["/home/juan-ubuntu/marketplace/node_modules/ipfs-http-client/esm/src/pin/remote/utils.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const decodePin = ({\n  Name: name,\n  Status: status,\n  Cid: cid\n}) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  };\n};\nexport const encodeService = service => {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\nexport const encodeCID = cid => {\n  if (CID.asCID(cid)) {\n    return cid.toString();\n  } else {\n    throw new TypeError(`CID instance expected instead of ${ typeof cid }`);\n  }\n};\nexport const encodeQuery = ({service, cid, name, status, all}) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  });\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value));\n    }\n  }\n  if (status) {\n    for (const value of status) {\n      query.append('status', value);\n    }\n  }\n  return query;\n};\nexport const encodeAddParams = ({cid, service, background, name, origins}) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  });\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString());\n    }\n  }\n  return params;\n};"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,iBAAiB,QAAQ,mCAAmC;AACrE,OAAO,MAAMC,SAAS,GAAGA,CAAC;EACxBC,IAAI,EAAEC,IAAI;EACVC,MAAM,EAAEC,MAAM;EACdC,GAAG,EAAEC;AACP,CAAC,KAAK;EACJ,OAAO;IACLA,GAAG,EAAER,GAAG,CAACS,KAAK,CAACD,GAAG,CAAC;IACnBJ,IAAI;IACJE;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAMI,aAAa,GAAGC,OAAO,IAAI;EACtC,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,EAAE,EAAE;IACjD,OAAOA,OAAO;EAChB,CAAC,MAAM;IACL,MAAM,IAAIC,SAAS,CAAC,6BAA6B,CAAC;EACpD;AACF,CAAC;AACD,OAAO,MAAMC,SAAS,GAAGL,GAAG,IAAI;EAC9B,IAAIR,GAAG,CAACc,KAAK,CAACN,GAAG,CAAC,EAAE;IAClB,OAAOA,GAAG,CAACO,QAAQ,CAAC,CAAC;EACvB,CAAC,MAAM;IACL,MAAM,IAAIH,SAAS,CAAE,oCAAoC,OAAOJ,GAAK,EAAC,CAAC;EACzE;AACF,CAAC;AACD,OAAO,MAAMQ,WAAW,GAAGA,CAAC;EAACL,OAAO;EAAEH,GAAG;EAAEJ,IAAI;EAAEE,MAAM;EAAEW;AAAG,CAAC,KAAK;EAChE,MAAMC,KAAK,GAAGjB,iBAAiB,CAAC;IAC9BU,OAAO,EAAED,aAAa,CAACC,OAAO,CAAC;IAC/BP,IAAI;IACJe,KAAK,EAAEF,GAAG,GAAG,IAAI,GAAGG;EACtB,CAAC,CAAC;EACF,IAAIZ,GAAG,EAAE;IACP,KAAK,MAAMa,KAAK,IAAIb,GAAG,EAAE;MACvBU,KAAK,CAACI,MAAM,CAAC,KAAK,EAAET,SAAS,CAACQ,KAAK,CAAC,CAAC;IACvC;EACF;EACA,IAAIf,MAAM,EAAE;IACV,KAAK,MAAMe,KAAK,IAAIf,MAAM,EAAE;MAC1BY,KAAK,CAACI,MAAM,CAAC,QAAQ,EAAED,KAAK,CAAC;IAC/B;EACF;EACA,OAAOH,KAAK;AACd,CAAC;AACD,OAAO,MAAMK,eAAe,GAAGA,CAAC;EAACf,GAAG;EAAEG,OAAO;EAAEa,UAAU;EAAEpB,IAAI;EAAEqB;AAAO,CAAC,KAAK;EAC5E,MAAMC,MAAM,GAAGzB,iBAAiB,CAAC;IAC/B0B,GAAG,EAAEd,SAAS,CAACL,GAAG,CAAC;IACnBG,OAAO,EAAED,aAAa,CAACC,OAAO,CAAC;IAC/BP,IAAI;IACJoB,UAAU,EAAEA,UAAU,GAAG,IAAI,GAAGJ;EAClC,CAAC,CAAC;EACF,IAAIK,OAAO,EAAE;IACX,KAAK,MAAMG,MAAM,IAAIH,OAAO,EAAE;MAC5BC,MAAM,CAACJ,MAAM,CAAC,QAAQ,EAAEM,MAAM,CAACb,QAAQ,CAAC,CAAC,CAAC;IAC5C;EACF;EACA,OAAOW,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}