{"ast":null,"code":"var _jsxFileName = \"/home/juan-ubuntu/marketplace/src/frontend/components/MyPurchases.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyPurchases({\n  marketplace,\n  nft,\n  account\n}) {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [purchases, setPurchases] = useState([]);\n  const loadPurchasedItems = async () => {\n    const itemCount = await marketplace.itemCount();\n    let listedItems = [];\n    for (let index; index < itemCount; index++) {\n      const i = await marketplace.items(indx);\n      const uri = await nft.tokenURI(i.tokenId);\n      const response = await fetch(uri);\n      const metadata = await response.json();\n      const totalPrice = await marketplace.getTotalPrice(i.itemId);\n      let purchasedItem = {\n        totalPrice,\n        price: i.price,\n        itemId: i.itemId,\n        name: metadata.name,\n        description: metadata.description,\n        image: metadata.image\n      };\n      listedItems.push(purchasedItem);\n    }\n    /*\r\n        const filter = marketplace.filters.Bought(null, null, null, null, null, account);\r\n        console.log(filter)\r\n        const results = await marketplace.queryFilter(filter);\r\n        console.log(results)\r\n        const purchases = await Promise.all(results.map(async i => {\r\n        console.log(i.args)\r\n        i = i.args;\r\n        const uri = await nft.tokenURI(i.tokenId);\r\n        const response = await fetch(uri);\r\n        const metadata = await response.json();\r\n        const totalPrice = await marketplace.getTotalPrice(i.itemId);\r\n        let purchasedItem = {\r\n            totalPrice,\r\n            price: i.price,\r\n            itemId: i.itemId,\r\n            name: metadata.name,\r\n            description: metadata.description,\r\n            image: metadata.image\r\n        };\r\n        return purchasedItem;\r\n    }))*/\n    setLoading(false);\n    setPurchases(purchases);\n  };\n  useEffect(() => {\n    loadPurchasedItems();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      padding: \"1rem 0\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: purchases.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-5 py-3 container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        lg: 4,\n        className: \"g-4 py-3\",\n        children: purchases.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: item.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: [ethers.utils.formatEther(item.totalPrice), \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        padding: \"1rem 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" No purchases \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(MyPurchases, \"+bT9nvXJXwVwMkewhHc+Eyc0m60=\");\n_c = MyPurchases;\nvar _c;\n$RefreshReg$(_c, \"MyPurchases\");","map":{"version":3,"names":["useState","useEffect","ethers","Row","Col","Card","jsxDEV","_jsxDEV","MyPurchases","marketplace","nft","account","_s","loading","setLoading","purchases","setPurchases","loadPurchasedItems","itemCount","listedItems","index","i","items","indx","uri","tokenURI","tokenId","response","fetch","metadata","json","totalPrice","getTotalPrice","itemId","purchasedItem","price","name","description","image","push","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","xs","md","lg","map","item","idx","Img","variant","src","Footer","utils","formatEther","_c","$RefreshReg$"],"sources":["/home/juan-ubuntu/marketplace/src/frontend/components/MyPurchases.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\n\r\nexport default function MyPurchases({ marketplace, nft, account }) {\r\n    const [loading, setLoading] = useState(true);\r\n    const [purchases, setPurchases] = useState([]);\r\n\r\n    const loadPurchasedItems = async () => {\r\n        const itemCount = await marketplace.itemCount();\r\n        let listedItems = [];\r\n        \r\n        for(let index; index < itemCount; index++){\r\n            const i = await marketplace.items(indx);\r\n\r\n            const uri = await nft.tokenURI(i.tokenId);\r\n            const response = await fetch(uri);\r\n            const metadata = await response.json();\r\n            const totalPrice = await marketplace.getTotalPrice(i.itemId);\r\n            let purchasedItem = {\r\n                totalPrice,\r\n                price: i.price,\r\n                itemId: i.itemId,\r\n                name: metadata.name,\r\n                description: metadata.description,\r\n                image: metadata.image\r\n            };\r\n            listedItems.push(purchasedItem);\r\n        }\r\n        /*\r\n            const filter = marketplace.filters.Bought(null, null, null, null, null, account);\r\n            console.log(filter)\r\n            const results = await marketplace.queryFilter(filter);\r\n            console.log(results)\r\n            const purchases = await Promise.all(results.map(async i => {\r\n            console.log(i.args)\r\n            i = i.args;\r\n            const uri = await nft.tokenURI(i.tokenId);\r\n            const response = await fetch(uri);\r\n            const metadata = await response.json();\r\n            const totalPrice = await marketplace.getTotalPrice(i.itemId);\r\n            let purchasedItem = {\r\n                totalPrice,\r\n                price: i.price,\r\n                itemId: i.itemId,\r\n                name: metadata.name,\r\n                description: metadata.description,\r\n                image: metadata.image\r\n            };\r\n            return purchasedItem;\r\n        }))*/\r\n        setLoading(false);\r\n        setPurchases(purchases);\r\n    }\r\n    useEffect(() => {\r\n        loadPurchasedItems()\r\n    }, [])\r\n    if (loading) return (\r\n        <main style={{ padding: \"1rem 0\" }}>\r\n            <h2>Loading...</h2>\r\n        </main>\r\n    );\r\n    return (\r\n        <div className='flex justify-center'>\r\n            {purchases.length > 0 ?\r\n                <div className='px-5 py-3 container'>\r\n                    <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\r\n                        {purchases.map((item, idx) => (\r\n                            <Col key={idx} className=\"overflow-hidden\">\r\n                                <Card>\r\n                                    <Card.Img variant=\"top\" src={item.image} />\r\n                                    <Card.Footer>\r\n                                        {ethers.utils.formatEther(item.totalPrice)} ETH\r\n                                    </Card.Footer>\r\n                                </Card>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </div>\r\n                : (\r\n                    <main style={{ padding: \"1rem 0\" }}>\r\n                        <h2> No purchases </h2>\r\n                    </main>\r\n                )}\r\n        </div>\r\n    );\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}