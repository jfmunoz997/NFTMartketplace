{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createSet = configure(api => {\n  const set = async (key, value, options = {}) => {\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type');\n    }\n    const params = {\n      ...options,\n      ...encodeParam(key, value)\n    };\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(params),\n      headers: options.headers\n    });\n    await res.text();\n  };\n  return set;\n});\nconst encodeParam = (key, value) => {\n  switch (typeof value) {\n    case 'boolean':\n      return {\n        arg: [key, value.toString()],\n        bool: true\n      };\n    case 'string':\n      return {\n        arg: [key, value]\n      };\n    default:\n      return {\n        arg: [key, JSON.stringify(value)],\n        json: true\n      };\n  }\n};","map":{"version":3,"names":["configure","toUrlSearchParams","createSet","api","set","key","value","options","Error","params","encodeParam","res","post","signal","searchParams","headers","text","arg","toString","bool","JSON","stringify","json"],"sources":["/home/juan-ubuntu/marketplace/node_modules/ipfs-http-client/esm/src/config/set.js"],"sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createSet = configure(api => {\n  const set = async (key, value, options = {}) => {\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type');\n    }\n    const params = {\n      ...options,\n      ...encodeParam(key, value)\n    };\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(params),\n      headers: options.headers\n    });\n    await res.text();\n  };\n  return set;\n});\nconst encodeParam = (key, value) => {\n  switch (typeof value) {\n  case 'boolean':\n    return {\n      arg: [\n        key,\n        value.toString()\n      ],\n      bool: true\n    };\n  case 'string':\n    return {\n      arg: [\n        key,\n        value\n      ]\n    };\n  default:\n    return {\n      arg: [\n        key,\n        JSON.stringify(value)\n      ],\n      json: true\n    };\n  }\n};"],"mappings":"AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAACG,GAAG,IAAI;EACxC,MAAMC,GAAG,GAAG,MAAAA,CAAOC,GAAG,EAAEC,KAAK,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;IAC9C,IAAI,OAAOF,GAAG,KAAK,QAAQ,EAAE;MAC3B,MAAM,IAAIG,KAAK,CAAC,kBAAkB,CAAC;IACrC;IACA,MAAMC,MAAM,GAAG;MACb,GAAGF,OAAO;MACV,GAAGG,WAAW,CAACL,GAAG,EAAEC,KAAK;IAC3B,CAAC;IACD,MAAMK,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,QAAQ,EAAE;MACnCC,MAAM,EAAEN,OAAO,CAACM,MAAM;MACtBC,YAAY,EAAEb,iBAAiB,CAACQ,MAAM,CAAC;MACvCM,OAAO,EAAER,OAAO,CAACQ;IACnB,CAAC,CAAC;IACF,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;EAClB,CAAC;EACD,OAAOZ,GAAG;AACZ,CAAC,CAAC;AACF,MAAMM,WAAW,GAAGA,CAACL,GAAG,EAAEC,KAAK,KAAK;EAClC,QAAQ,OAAOA,KAAK;IACpB,KAAK,SAAS;MACZ,OAAO;QACLW,GAAG,EAAE,CACHZ,GAAG,EACHC,KAAK,CAACY,QAAQ,CAAC,CAAC,CACjB;QACDC,IAAI,EAAE;MACR,CAAC;IACH,KAAK,QAAQ;MACX,OAAO;QACLF,GAAG,EAAE,CACHZ,GAAG,EACHC,KAAK;MAET,CAAC;IACH;MACE,OAAO;QACLW,GAAG,EAAE,CACHZ,GAAG,EACHe,IAAI,CAACC,SAAS,CAACf,KAAK,CAAC,CACtB;QACDgB,IAAI,EAAE;MACR,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}